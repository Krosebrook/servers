name: Deploy Webhook Server

on:
  push:
    branches: [main]
    paths:
      - 'src/webhooks/**'
      - '.github/workflows/webhook-deploy.yml'
  pull_request:
    branches: [main]
    paths:
      - 'src/webhooks/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/webhook-server

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: src/webhooks/package-lock.json

      - name: Install dependencies
        working-directory: src/webhooks
        run: npm ci

      - name: Run TypeScript check
        working-directory: src/webhooks
        run: npm run build

      - name: Run tests
        working-directory: src/webhooks
        run: npm test

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: src/webhooks
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: production

    steps:
      - name: Deploy to production
        run: |
          echo "Deploying webhook server to production..."
          echo "Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
          # Add your deployment commands here
          # This could be:
          # - Kubernetes deployment
          # - Docker Swarm service update
          # - Cloud service deployment
          # - SSH to server and pull new image